{
  "title": "joshliamnice - blog & website",
  "about": "The project's goal was to let me set up something from scratch where I do all the front-end, back-end and set up of the cloud services. This would expose me to technologies I haven't used much before. The website was to tell users who I am and what I have been up to with blog posts and showcasing projects I have worked on. Additionally I wanted to write about things I found interesting but not just in web development, any topic I found interesting. Personally, I think writing about something you have learnt deepens your understanding of that topic and strengthens your knowledge.",
  "technologies": [
    { "name": "react", "type": "frontend" },
    { "name": "express", "type": "backend" },
    {
      "name": "AWS Lambda",
      "about": "Lambda allowed for the API, which was a small Express application, to run in a serverless architecture. This had the added benefit of if the site should experience high traffic it should be able to deal with it with minimum disruption.. The only issue that has arose has been cold start times, to address this I had implemented a Lambda warm up function when the user has first landed on the site, additionally I will look at other solutions in the future.",
      "type": "infra"
    },
    {
      "name": "TailwindCSS",
      "type": "frontend",
      "about": "If you are not using Tailwind you should, it makes CSS so easy and quick to do. In addition you can see every style being applied right in front of you, no looking around your codebase to find the class you need to change. Its config gives you all the flexibility you need and is an extremely well documented library with a great VSCode extension."
    },
    { "name": "PlanetScale", "type": "infra", "about": "For those who don't know, PlanetScale is a serverless database provider. I previously only had experience with Postgres databases and PlanetScale only provides MySQL databases, however creating tables, inserting data and querying a MySQL database is similar to Postgres and therefore the learning process was quite simple. PlanetScale makes it really simple to connect to from the Express application and from the limited usage I have had response times are very quick." },
    { "name": "MySQL", "type": "backend" },
    { "name": "Vite", "type": "frontend" },
    { "name": "TypeScript", "type": "frontend" }
  ],
  "features": [
    {
      "name": "Blog",
      "about": "I wanted the blog to integrate seamlessly into my website and ensure visitors didn't have to go to an external site. It is quite a simple part of the site for the user, where they can select a blog post from the list and then view them. The blog posts consist of text, images, videos and code snippets, this was the most challenging part making it flexible enough that I would never have to change any code in the future."
    },
    {
      "name": "Projects",
      "about": "TDuring the design phase I got carried away with this page, once I had sketched out a design I realised that the amount of content I wanted to show couldn't realistically be stored on just the front-end and therefore the API was changed to accommodate for it. The projects page shows a list of projects I have worked on and by clicking on one of these takes you to that projects page (like this one you are on) which has details about why and what it is, the main feature, technologies I have used to create it."
    }
  ],
  "blogPosts": [
    {
      "id": "8580409a-0211-413e-a19f-2e8df752f8af",
      "name": "Creation of my blog"
    },     {
      "id": "449af6ec-325e-4be3-aab6-99e383e46571",
      "name": "Into the infrastructure"
    }
  ],
  "links": {
    "code": {
      "link": "https://github.com/joshnice/blog",
      "label": "Source code"
    },
    "project": {
      "link": "https://www.joshliamnice.co.uk",
      "label": "www.joshliamnice.co.uk"
    }
  }
}
